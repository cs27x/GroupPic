{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "description": "Swagger documentation for the GroupPic API",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "GroupPic",
            "email": "michael.h.schoenfield@gmail.com"
        },
        "license": {
            "name": "GroupPic",
            "url": "https://github.com/cs27x/GroupPic"
        }
    },
    "host": "groupPic.api",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/photo": {
            "get": {
                "description": "Returns all photos a person has access too",
                "operationId": "getPictureList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "User component",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo response successful",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "photo"
                            }
                        }
                    },
                    "400": {
                        "description": "Error inside the request or the request JSON",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "500": {
                        "description": "Server based error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new photo to the database.  Duplicates are allowed",
                "operationId": "sendPicture",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "photo",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "$ref": "photo"
                        },
                        "description": "photo object",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo successfully added",
                        "schema": {
                            "$ref": "photo"
                        }
                    },
                    "400": {
                        "description": "Error inside the request or the request JSON",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "500": {
                        "description": "Server based error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/photo/{id}": {
            "get": {
                "description": "Returns a image based on a single ID, if the user does not have access to the photo",
                "operationId": "findPhotoById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of photo to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID response",
                        "schema": {
                            "$ref": "#/definitions/photo"
                        }
                    },
                    "400": {
                        "description": "Error inside the request or the request JSON",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "500": {
                        "description": "Server based error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        },
        "/photo/{id}/comment": {
            "get": {
                "description": "Returns comment on a specific picture",
                "operationId": "getComments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of photo to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns comments associated to photo by ID",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "comment"
                            }
                        }
                    },
                    "400": {
                        "description": "Error inside the request or the request JSON",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "500": {
                        "description": "Server based error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "photo": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "sender": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "integer",
                    "format": "date"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "format": "string"
                    }
                }
            }
        },
        "comment": {
            "properties": {
                "user": {
                    "type": "string",
                    "format": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "date": {
                    "type": "integer",
                    "format": "date"
                },
                "content": {
                    "type": "string",
                    "description": "Content of the caption"
                },
                "votes": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "errorModel": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}